{"version":3,"file":"platform-browser-dynamic.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser-dynamic/src/platform-browser-dynamic.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,cAAc,EAAE,mBAAmB,EAAC,MAAM,mBAAmB;OAC9D,EAAiB,gBAAgB,EAAgM,qBAAqB,EAAC,MAAM,eAAe;OAC5Q,EAAgB,aAAa,EAAmB,gBAAgB,EAAC,MAAM,2BAA2B;OAElG,EAAC,2CAA2C,EAAC,MAAM,sBAAsB;OAEzE,EAAC,oBAAoB,EAAC,MAAM,yCAAyC;OACrE,EAAC,kBAAkB,EAAC,MAAM,wCAAwC;AAEzE,cAAc,kBAAkB,CAAC;AAEjC;;GAEG;AACH,OAAO,IAAM,uBAAuB,GAChC,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,oBAAoB,EAAC,CAAC,CAAC;AAEhE;;GAEG;AACH,OAAO,IAAM,sBAAsB,GAAG,qBAAqB,CACvD,mBAAmB,EAAE,gBAAgB,EAAE,2CAA2C,CAAC,CAAC;AAExF;;;;GAIG;AACH,kCACI,eAAuB,EAAE,eAAgC;IAAhC,+BAAgC,GAAhC,oBAAgC;IAC3D,kDAAkD;IAClD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAE,CAAC;YACA,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE,eAAe;SAC1B,CAAgB;SACZ,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AAED;;GAEG;AACH,OAAO,IAAM,wBAAwB,GAAG,qBAAqB,CACzD,mBAAmB,EAAE,kBAAkB,EAAE,CAAC;QACxC,OAAO,EAAE,gBAAgB;QACzB,QAAQ,EAAE,EAAC,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,kBAAkB,EAAC,CAAC,EAAC;QAChF,KAAK,EAAE,IAAI;KACZ,CAAC,CAAC,CAAC;AAER,wBAAwB,GAAU;IAChC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AACxB,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader, platformCoreDynamic} from '@angular/compiler';\nimport {ApplicationRef, COMPILER_OPTIONS, CUSTOM_ELEMENTS_SCHEMA, ClassProvider, CompilerFactory, CompilerOptions, ComponentRef, ExistingProvider, FactoryProvider, NgModule, PlatformRef, Provider, Type, TypeProvider, ValueProvider, createPlatformFactory} from '@angular/core';\nimport {BrowserModule, WORKER_SCRIPT, WorkerAppModule, platformWorkerUi} from '@angular/platform-browser';\n\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nimport {Console} from './private_import_core';\nimport {CachedResourceLoader} from './resource_loader/resource_loader_cache';\nimport {ResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\nexport * from './private_export';\n\n/**\n * @experimental\n */\nexport const RESOURCE_CACHE_PROVIDER: Provider[] =\n    [{provide: ResourceLoader, useClass: CachedResourceLoader}];\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const platformBrowserDynamic = createPlatformFactory(\n    platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * Bootstraps the worker ui.\n *\n * @experimental\n */\nexport function bootstrapWorkerUi(\n    workerScriptUri: string, customProviders: Provider[] = []): Promise<PlatformRef> {\n  // For now, just creates the worker ui platform...\n  return Promise.resolve(platformWorkerUi(([{\n                                            provide: WORKER_SCRIPT,\n                                            useValue: workerScriptUri,\n                                          }] as Provider[])\n                                              .concat(customProviders)));\n}\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const platformWorkerAppDynamic = createPlatformFactory(\n    platformCoreDynamic, 'workerAppDynamic', [{\n      provide: COMPILER_OPTIONS,\n      useValue: {providers: [{provide: ResourceLoader, useClass: ResourceLoaderImpl}]},\n      multi: true\n    }]);\n\nfunction normalizeArray(arr: any[]): any[] {\n  return arr ? arr : [];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}