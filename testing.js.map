{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../modules/@angular/platform-browser-dynamic/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;AAEH,wBAAyC,2BAA2B,CAAC,CAAA;AACrE,qBAA2D,eAAe,CAAC,CAAA;AAC3E,wBAAoC,uBAAuB,CAAC,CAAA;AAC5D,wBAAmC,mCAAmC,CAAC,CAAA;AAEvE,mCAA0D,0BAA0B,CAAC,CAAA;AACrF,4CAAuC,uCAAuC,CAAC,CAAA;AAE/E,iBAAc,0BAKd,CAAC,EALuC;AAExC;;GAEG;AACU,qCAA6B,GAAG,4BAAqB,CAC9D,oCAA0B,EAAE,uBAAuB,EACnD,gEAA2C,CAAC,CAAC;AACjD;IAAA;IAUA,CAAC;IATD,kBAAkB;IACX,sCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,8BAAoB,CAAC;oBAC/B,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,sDAAwB,EAAC;qBACrE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kCAAC;AAAD,CAAC,AAVD,IAUC;AAVY,mCAA2B,8BAUvC,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {platformCoreDynamicTesting} from '@angular/compiler/testing';\nimport {NgModule, PlatformRef, createPlatformFactory} from '@angular/core';\nimport {TestComponentRenderer} from '@angular/core/testing';\nimport {BrowserTestingModule} from '@angular/platform-browser/testing';\n\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './src/platform_providers';\nimport {DOMTestComponentRenderer} from './testing/dom_test_component_renderer';\n\nexport * from './private_export_testing'\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const platformBrowserDynamicTesting = createPlatformFactory(\n    platformCoreDynamicTesting, 'browserDynamicTesting',\n    INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\nexport class BrowserDynamicTestingModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserTestingModule],\n  providers: [\n    {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}