{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../modules/@angular/platform-browser-dynamic/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;AAEH,yBAA+H,mBAAmB,CAAC,CAAA;AACnJ,wBAAyE,2BAA2B,CAAC,CAAA;AACrG,qBAA2J,eAAe,CAAC,CAAA;AAC3K,wBAA+E,uBAAuB,CAAC,CAAA;AACvG,wBAA2D,mCAAmC,CAAC,CAAA;AAE/F,6BAAsB,gBAAgB,CAAC,CAAA;AAEvC,mCAA0D,0BAA0B,CAAC,CAAA;AACrF,4CAAuC,uCAAuC,CAAC,CAAA;AAE/E,iBAAc,0BAKd,CAAC,EALuC;AAExC;;GAEG;AACU,qCAA6B,GAAG,4BAAqB,CAC9D,oCAA0B,EAAE,uBAAuB,EACnD,gEAA2C,CAAC,CAAC;AACjD;IAAA;IAWA,CAAC;IAVD,kBAAkB;IACX,sCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,8BAAoB,CAAC;oBAC/B,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,8BAAoB,EAAE,QAAQ,EAAE,wCAA8B,EAAC;wBACzE,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,sDAAwB,EAAC;qBACrE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kCAAC;AAAD,CAAC,AAXD,IAWC;AAXY,mCAA2B,8BAWvC,CAAA;AAED;;GAEG;AACU,+CAAuC;AAChD,+EAA+E;AAC/E,iCAAiC;AACjC,CAAC,UAAC,YAAmB;QACnB,IAAM,uBAAuB,GAAG,wDAA6C,CAAC,YAAY,CAAC,CAAC;QAC5F,IAAM,WAAW,GACb,4BAAqB,CAAC,qCAA6B,EAAE,iCAAiC,EAAE,CAAC;gBACjE,OAAO,EAAE,sBAAe;gBACxB,QAAQ,EAAE,uBAAuB,CAAC,eAAe;gBACjD,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC,EAAE,CAAC;QAChC;YAAA;YAQN,CAAC;YAPK,kBAAkB;YACjB,4BAAU,GAA0B;gBAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;4BACjB,OAAO,EAAE,CAAC,2BAA2B,CAAC;4BACtC,YAAY,EAAE,CAAC,uBAAuB,CAAC,kBAAkB,CAAC;yBAC3D,EAAG,EAAE;aACX,CAAC;YACF,wBAAC;QAAD,CAAC,AARK,IAQL;QAEK,IAAM,YAAY,GAAG,6BAAmB,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;QACzE,IAAM,OAAO,GAAY,YAAY,CAAC,GAAG,CAAC,sBAAO,CAAC,CAAC;QACnD,uBAAuB,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAC,GAAG,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAjB,CAAiB,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;AAEP;;GAEG;AACU,kDAA0C,GACnD,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerConfig, DirectiveResolver, NgModuleResolver, ViewResolver, analyzeAppProvidersForDeprecatedConfiguration} from '@angular/compiler';\nimport {OverridingTestComponentBuilder, coreDynamicTestingPlatform} from '@angular/compiler/testing';\nimport {Compiler, CompilerFactory, CompilerOptions, NgModule, PlatformRef, Provider, ReflectiveInjector, Type, createPlatform, createPlatformFactory} from '@angular/core';\nimport {TestComponentBuilder, TestComponentRenderer, initTestEnvironment} from '@angular/core/testing';\nimport {BrowserTestingModule, browserTestingPlatform} from '@angular/platform-browser/testing';\n\nimport {Console} from './core_private';\nimport {browserDynamicPlatform} from './index';\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './src/platform_providers';\nimport {DOMTestComponentRenderer} from './testing/dom_test_component_renderer';\n\nexport * from './private_export_testing'\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const browserDynamicTestingPlatform = createPlatformFactory(\n    coreDynamicTestingPlatform, 'browserDynamicTesting',\n    INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\nexport class BrowserDynamicTestingModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserTestingModule],\n  providers: [\n    {provide: TestComponentBuilder, useClass: OverridingTestComponentBuilder},\n    {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n  ]\n}, ] },\n];\n}\n\n/**\n * @deprecated Use initTestEnvironment with browserDynamicTestingPlatform instead.\n */\nexport const TEST_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    // Note: This is not a real provider but a hack to still support the deprecated\n    // `setBaseTestProviders` method!\n    [(appProviders: any[]) => {\n      const deprecatedConfiguration = analyzeAppProvidersForDeprecatedConfiguration(appProviders);\n      const platformRef =\n          createPlatformFactory(browserDynamicTestingPlatform, 'browserDynamicTestingDeprecated', [{\n                                  provide: CompilerOptions,\n                                  useValue: deprecatedConfiguration.compilerOptions,\n                                  multi: true\n                                }])();\n      class DynamicTestModule {\n      /** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n        exports: [BrowserDynamicTestingModule],\n        declarations: [deprecatedConfiguration.moduleDeclarations]\n      }, ] },\n];\n}\n\n      const testInjector = initTestEnvironment(DynamicTestModule, platformRef);\n      const console: Console = testInjector.get(Console);\n      deprecatedConfiguration.deprecationMessages.forEach((msg) => console.warn(msg));\n    }];\n\n/**\n * @deprecated Use initTestEnvironment with BrowserDynamicTestingModule instead.\n */\nexport const TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}