{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../modules/@angular/platform-browser-dynamic/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;AAEH,yBAA8D,mBAAmB,CAAC,CAAA;AAClF,wBAAsF,2BAA2B,CAAC,CAAA;AAClH,qBAA2H,eAAe,CAAC,CAAA;AAC3I,wBAA0D,uBAAuB,CAAC,CAAA;AAClF,wBAAqG,mCAAmC,CAAC,CAAA;AAEzI,sBAAmH,SAAS,CAAC,CAAA;AAC7H,4CAAuC,uCAAuC,CAAC,CAAA;AAE/E,iBAAc,0BAOd,CAAC,EAPuC;AAExC;;;;GAIG;AACU,6CAAqC,GAAG,wCAAgC,CAAC,YAAY,CAAC;IACjG,SAAS,EAAE;QACT,EAAC,OAAO,EAAE,4BAAiB,EAAE,QAAQ,EAAE,+BAAqB,EAAC;QAC7D,EAAC,OAAO,EAAE,uBAAY,EAAE,QAAQ,EAAE,0BAAgB,EAAC;KACpD;CACF,CAAC,CAAC;AAGH;;;;GAIG;AACH,IAAM,uCAAuC,GAA2C;IACtF,yCAA+B;IAC/B,0CAAkC;IAClC,EAAC,OAAO,EAAE,sBAAe,EAAE,QAAQ,EAAE,6CAAqC,EAAC;CAC5E,CAAC;AAEF;;GAEG;AACU,kCAA0B,GACnC,4BAAqB,CAAC,oBAAoB,EAAE,uCAAuC,CAAC,CAAC;AACzF;IAAA;IAWA,CAAC;IAVD,kBAAkB;IACX,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,OAAO,EAAE,CAAC,2BAAiB,CAAC;oBAC5B,SAAS,EAAE;wBACT,EAAC,OAAO,EAAE,8BAAoB,EAAE,QAAQ,EAAE,wCAA8B,EAAC;wBACzE,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,sDAAwB,EAAC;qBACrE;iBACF,EAAG,EAAE;KACL,CAAC;IACF,+BAAC;AAAD,CAAC,AAXD,IAWC;AAXY,gCAAwB,2BAWpC,CAAA;AAED;;GAEG;AACU,+CAAuC,GAChD,uCAAuC,CAAC;AAG5C;;GAEG;AACU,kDAA0C,GAA2C;IAChG,4CAAkC;IAClC,EAAC,OAAO,EAAE,8BAAoB,EAAE,QAAQ,EAAE,wCAA8B,EAAC;IACzE,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,sDAAwB,EAAC;CACrE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerConfig, DirectiveResolver, ViewResolver} from '@angular/compiler';\nimport {MockDirectiveResolver, MockViewResolver, OverridingTestComponentBuilder} from '@angular/compiler/testing';\nimport {AppModule, Compiler, CompilerFactory, PlatformRef, Provider, ReflectiveInjector, Type, createPlatformFactory} from '@angular/core';\nimport {TestComponentBuilder, TestComponentRenderer} from '@angular/core/testing';\nimport {BrowserTestModule, TEST_BROWSER_APPLICATION_PROVIDERS, TEST_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser/testing';\n\nimport {BROWSER_APP_COMPILER_PROVIDERS, BROWSER_DYNAMIC_COMPILER_FACTORY, BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './index';\nimport {DOMTestComponentRenderer} from './testing/dom_test_component_renderer';\n\nexport * from './private_export_testing'\n\n/**\n * CompilerFactory for browser dynamic test platform\n *\n * @experimental\n */\nexport const BROWSER_DYNAMIC_TEST_COMPILER_FACTORY = BROWSER_DYNAMIC_COMPILER_FACTORY.withDefaults({\n  providers: [\n    {provide: DirectiveResolver, useClass: MockDirectiveResolver},\n    {provide: ViewResolver, useClass: MockViewResolver}\n  ]\n});\n\n\n/**\n * Providers for the browser dynamic platform\n *\n * @experimental\n */\nconst BROWSER_DYNAMIC_TEST_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  TEST_BROWSER_PLATFORM_PROVIDERS,\n  BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n  {provide: CompilerFactory, useValue: BROWSER_DYNAMIC_TEST_COMPILER_FACTORY},\n];\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const browserDynamicTestPlatform =\n    createPlatformFactory('browserDynamicTest', BROWSER_DYNAMIC_TEST_PLATFORM_PROVIDERS);\nexport class BrowserDynamicTestModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{\n  modules: [BrowserTestModule],\n  providers: [\n    {provide: TestComponentBuilder, useClass: OverridingTestComponentBuilder},\n    {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n  ]\n}, ] },\n];\n}\n\n/**\n * @deprecated Use initTestEnvironment with browserDynamicTestPlatform instead.\n */\nexport const TEST_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    BROWSER_DYNAMIC_TEST_PLATFORM_PROVIDERS;\n\n\n/**\n * @deprecated Use initTestEnvironment with BrowserDynamicTestModule instead.\n */\nexport const TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  TEST_BROWSER_APPLICATION_PROVIDERS,\n  {provide: TestComponentBuilder, useClass: OverridingTestComponentBuilder},\n  {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}