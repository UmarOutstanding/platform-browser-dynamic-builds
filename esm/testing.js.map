{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser-dynamic/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAiB,iBAAiB,EAAE,YAAY,EAAC,MAAM,mBAAmB;OAC1E,EAAC,qBAAqB,EAAE,gBAAgB,EAAE,8BAA8B,EAAC,MAAM,2BAA2B;OAC1G,EAAC,SAAS,EAAY,eAAe,EAAmD,qBAAqB,EAAC,MAAM,eAAe;OACnI,EAAC,oBAAoB,EAAE,qBAAqB,EAAC,MAAM,uBAAuB;OAC1E,EAAC,iBAAiB,EAAE,+BAA+B,EAAC,MAAM,mCAAmC;OAE7F,EAAiC,gCAAgC,EAAE,kCAAkC,EAAC,MAAM,SAAS;OACrH,EAAC,wBAAwB,EAAC,MAAM,uCAAuC;AAE9E,cAAc,0BAA0B,CAAA;AAExC;;;;GAIG;AACH,OAAO,MAAM,qCAAqC,GAAG,gCAAgC,CAAC,YAAY,CAAC;IACjG,SAAS,EAAE;QACT,EAAC,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,qBAAqB,EAAC;QAC7D,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,gBAAgB,EAAC;KACpD;CACF,CAAC,CAAC;AAGH;;;;GAIG;AACH,MAAM,uCAAuC,GAA2C;IACtF,+BAA+B;IAC/B,kCAAkC;IAClC,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,qCAAqC,EAAC;CAC5E,CAAC;AAEF;;GAEG;AACH,OAAO,MAAM,0BAA0B,GACnC,qBAAqB,CAAC,oBAAoB,EAAE,uCAAuC,CAAC,CAAC;AACzF;AAWA,CAAC;AAVD,kBAAkB;AACX,mCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,OAAO,EAAE,CAAC,iBAAiB,CAAC;gBAC5B,SAAS,EAAE;oBACT,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,8BAA8B,EAAC;oBACzE,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,wBAAwB,EAAC;iBACrE;aACF,EAAG,EAAE;CACL,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerConfig, DirectiveResolver, ViewResolver} from '@angular/compiler';\nimport {MockDirectiveResolver, MockViewResolver, OverridingTestComponentBuilder} from '@angular/compiler/testing';\nimport {AppModule, Compiler, CompilerFactory, PlatformRef, Provider, ReflectiveInjector, Type, createPlatformFactory} from '@angular/core';\nimport {TestComponentBuilder, TestComponentRenderer} from '@angular/core/testing';\nimport {BrowserTestModule, TEST_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser/testing';\n\nimport {BROWSER_APP_COMPILER_PROVIDERS, BROWSER_DYNAMIC_COMPILER_FACTORY, BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './index';\nimport {DOMTestComponentRenderer} from './testing/dom_test_component_renderer';\n\nexport * from './private_export_testing'\n\n/**\n * CompilerFactory for browser dynamic test platform\n *\n * @experimental\n */\nexport const BROWSER_DYNAMIC_TEST_COMPILER_FACTORY = BROWSER_DYNAMIC_COMPILER_FACTORY.withDefaults({\n  providers: [\n    {provide: DirectiveResolver, useClass: MockDirectiveResolver},\n    {provide: ViewResolver, useClass: MockViewResolver}\n  ]\n});\n\n\n/**\n * Providers for the browser dynamic platform\n *\n * @experimental\n */\nconst BROWSER_DYNAMIC_TEST_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  TEST_BROWSER_PLATFORM_PROVIDERS,\n  BROWSER_DYNAMIC_PLATFORM_PROVIDERS,\n  {provide: CompilerFactory, useValue: BROWSER_DYNAMIC_TEST_COMPILER_FACTORY},\n];\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const browserDynamicTestPlatform =\n    createPlatformFactory('browserDynamicTest', BROWSER_DYNAMIC_TEST_PLATFORM_PROVIDERS);\nexport class BrowserDynamicTestModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{\n  modules: [BrowserTestModule],\n  providers: [\n    {provide: TestComponentBuilder, useClass: OverridingTestComponentBuilder},\n    {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n  ]\n}, ] },\n];\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}